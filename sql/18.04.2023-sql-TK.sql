-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Customers"
(
    id integer NOT NULL,
    username text NOT NULL,
    password text NOT NULL,
    email text NOT NULL,
    phone text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."CorporateCustomers"
(
    id integer NOT NULL,
    tax_number text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."IndividualCustomers"
(
    id integer NOT NULL,
    "TCKN" text,
    first_name text NOT NULL,
    last_name text NOT NULL,
    date_of_birth date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Addresses"
(
    id integer NOT NULL,
    customer_id integer NOT NULL,
    location_id integer NOT NULL,
    addresss text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Locations"
(
    id integer NOT NULL,
    customer_id integer NOT NULL,
    city_id integer NOT NULL,
    district_id integer NOT NULL,
    country_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Cities"
(
    id integer NOT NULL,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Districts"
(
    id integer NOT NULL,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Countries"
(
    id integer NOT NULL,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Rereviews"
(
    id integer NOT NULL,
    review_id integer NOT NULL,
    comment text NOT NULL,
    date date NOT NULL,
    status boolean NOT NULL,
    customer_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Reviews"
(
    id integer NOT NULL,
    customer_id integer NOT NULL,
    comment text NOT NULL,
    date date NOT NULL,
    status boolean NOT NULL,
    product_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."ProductAttributes"
(
    id integer NOT NULL,
    name text NOT NULL,
    value integer,
    date date NOT NULL,
    product_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Sellers"
(
    id integer NOT NULL,
    tax_number text NOT NULL,
    name text NOT NULL,
    email text NOT NULL,
    address text NOT NULL,
    phone text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Sizes"
(
    id integer NOT NULL,
    name text NOT NULL,
    code text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Colors"
(
    id integer NOT NULL,
    name text NOT NULL,
    code text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Invoices"
(
    id integer NOT NULL,
    order_id integer NOT NULL,
    date date NOT NULL,
    total double precision NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Orders"
(
    id integer NOT NULL,
    product_id integer NOT NULL,
    date date NOT NULL,
    total_price double precision NOT NULL,
    address text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Products"
(
    id integer NOT NULL,
    category_id integer NOT NULL,
    name text NOT NULL,
    description text NOT NULL,
    price double precision NOT NULL,
    image text NOT NULL,
    stock integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Colors_Products"
(
    "Colors_id" integer NOT NULL,
    "Products_id" integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Sizes_Products"
(
    "Sizes_id" integer NOT NULL,
    "Products_id" integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Sellers_Products"
(
    "Sellers_id" integer NOT NULL,
    "Products_id" integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Categories"
(
    id integer NOT NULL,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Discounts"
(
    id integer NOT NULL,
    product_id integer NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    rate double precision NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Returns"
(
    id integer NOT NULL,
    product_id integer NOT NULL,
    order_id integer NOT NULL,
    "number" integer,
    date date NOT NULL,
    amount double precision NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Shipments"
(
    id integer NOT NULL,
    order_id integer NOT NULL,
    date date NOT NULL,
    cargo_company text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Payments"
(
    id integer NOT NULL,
    order_id integer NOT NULL,
    date date NOT NULL,
    method text NOT NULL,
    total double precision NOT NULL,
    currency text NOT NULL,
    status text NOT NULL,
    address text NOT NULL,
    confirm_number text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Installments"
(
    id integer NOT NULL,
    payment_id integer NOT NULL,
    order_id integer NOT NULL,
    "number" smallint NOT NULL,
    date date NOT NULL,
    amount double precision NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."CorporateCustomers"
    ADD FOREIGN KEY (id)
    REFERENCES public."Customers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."IndividualCustomers"
    ADD FOREIGN KEY (id)
    REFERENCES public."Customers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Addresses"
    ADD FOREIGN KEY (customer_id)
    REFERENCES public."Customers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Addresses"
    ADD FOREIGN KEY (location_id)
    REFERENCES public."Locations" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Locations"
    ADD FOREIGN KEY (customer_id)
    REFERENCES public."Customers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Cities"
    ADD FOREIGN KEY (id)
    REFERENCES public."Locations" (city_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Districts"
    ADD FOREIGN KEY (id)
    REFERENCES public."Locations" (district_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Countries"
    ADD FOREIGN KEY (id)
    REFERENCES public."Locations" (country_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Rereviews"
    ADD FOREIGN KEY (review_id)
    REFERENCES public."Reviews" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Rereviews"
    ADD FOREIGN KEY (customer_id)
    REFERENCES public."Customers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Reviews"
    ADD FOREIGN KEY (customer_id)
    REFERENCES public."Customers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Reviews"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ProductAttributes"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Invoices"
    ADD FOREIGN KEY (order_id)
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Orders"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Products"
    ADD FOREIGN KEY (category_id)
    REFERENCES public."Categories" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Colors_Products"
    ADD FOREIGN KEY ("Colors_id")
    REFERENCES public."Colors" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Colors_Products"
    ADD FOREIGN KEY ("Products_id")
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Sizes_Products"
    ADD FOREIGN KEY ("Sizes_id")
    REFERENCES public."Sizes" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Sizes_Products"
    ADD FOREIGN KEY ("Products_id")
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Sellers_Products"
    ADD FOREIGN KEY ("Sellers_id")
    REFERENCES public."Sellers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Sellers_Products"
    ADD FOREIGN KEY ("Products_id")
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Discounts"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Returns"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Returns"
    ADD FOREIGN KEY (order_id)
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Shipments"
    ADD FOREIGN KEY (order_id)
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Payments"
    ADD FOREIGN KEY (order_id)
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Installments"
    ADD FOREIGN KEY (payment_id)
    REFERENCES public."Payments" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Installments"
    ADD FOREIGN KEY (order_id)
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;